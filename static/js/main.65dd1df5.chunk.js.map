{"version":3,"sources":["components/Input/Input.module.css","components/checkbox/Checkbox.module.css","components/button/Button.module.css","components/Error404.tsx","components/Login.tsx","components/CheckIn.tsx","components/PasswordRecovery.tsx","components/Input/Input.tsx","components/checkbox/Checkbox.tsx","components/button/Button.tsx","components/Profile.tsx","components/EnteringNewPassword.tsx","components/Routes..tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/Header.module.css"],"names":["module","exports","Error404","Login","CheckIn","PasswordRecovery","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","Profile","useState","setChecked","blue","EnteringNewPassword","PATH","Routes","path","exact","render","to","Header","header","link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,MAAQ,uB,mBCAxGD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,cAAgB,kC,mBCAxED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,sB,2JCW3CC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uFCGGC,MARf,WACI,OACI,yCCMOC,MARf,WACI,OACI,2CCMOC,MARf,WACI,OACI,oD,yCCsDOC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,MAAR,YAAiBP,EAAQK,IAAEG,WAAYH,IAAEI,WAAzC,YAAuDR,GAEhF,OACI,qCACI,mCACIN,KAAM,OACNC,SArBa,SAACc,GACtBd,GACGA,EAASc,GAEZb,GAAgBA,EAAaa,EAAEC,cAAcC,QAkBrCd,WAhBe,SAACY,GACxBZ,GAAcA,EAAWY,GAEzBX,GACa,UAAVW,EAAEG,KACFd,KAYKE,UAAWK,GAEPH,IAEPH,GAAS,sBAAMC,UAAWG,EAAjB,SAAsCJ,Q,iCCV7Cc,EAhCyC,SAAC,GASpD,EAPGnB,KAOF,IANEC,EAMH,EANGA,SAAUmB,EAMb,EANaA,gBACVd,EAKH,EALGA,UACAe,GAIH,EALcd,cAKd,EAJGc,UAEGb,EAEN,4FAOKG,EAAmB,UAAMD,IAAEY,SAAR,YAAoBhB,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNC,SAZa,SAACc,GACtBd,GAAYA,EAASc,GACrBK,GAAmBA,EAAgBL,EAAEC,cAAcO,UAW3CjB,UAAWK,GAEPH,IAEPa,GAAY,sBAAMf,UAAWI,IAAEH,cAAnB,SAAmCc,Q,iBCZ7CG,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKnB,EAGR,EAHQA,UACFE,EAEN,mCACKkB,EAAc,UAAMD,EAAMf,IAAEe,IAAMf,IAAEiB,QAAtB,YAAiCrB,GAErD,OACI,oCACIA,UAAWoB,GACPlB,KCQDoB,MArBf,WAAoB,IAAD,EACeC,oBAAkB,GADjC,mBACRN,EADQ,KACCO,EADD,KAEf,OACI,gCACI,cAAC,EAAD,CACIxB,UAAWI,IAAEqB,OAEjB,8BACI,cAAC,EAAD,CAAiBR,QAASA,EACTH,gBAAiBU,MAEtC,8BACI,cAAC,EAAD,4BCVDE,MARf,WACI,OACI,uDCKKC,EACF,SADEA,EAEC,YAFDA,EAGA,WAHAA,EAIS,qBAJTA,EAKa,yBA2BXC,MAxBf,WACI,OACI,8BAEI,eAAC,IAAD,WAII,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAEpD,cAAC,IAAD,CAAOE,KAAMF,EAAaI,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,EAAgBI,OAAQ,kBAAM,cAAC,EAAD,OAC3C,cAAC,IAAD,CAAOF,KAAMF,EAAeI,OAAQ,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMF,EAA0BI,OAAQ,kBAAM,cAAC,EAAD,OACrD,cAAC,IAAD,CAAOF,KAAMF,EAA6BI,OAAQ,kBAAM,cAAC,EAAD,OAGxD,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,aCftBE,MAbf,WACI,OACI,sBAAKjC,UAAWI,IAAE8B,OAAlB,UACI,cAAC,IAAD,CAASF,GAAIL,EAAY3B,UAAWI,IAAE+B,KAAtC,mBACA,cAAC,IAAD,CAASH,GAAIL,EAAe3B,UAAWI,IAAE+B,KAAzC,sBACA,cAAC,IAAD,CAASH,GAAIL,EAAc3B,UAAWI,IAAE+B,KAAxC,qBACA,cAAC,IAAD,CAASH,GAAIL,EAAwB3B,UAAWI,IAAE+B,KAAlD,+BACA,cAAC,IAAD,CAASH,GAAIL,EAA4B3B,UAAWI,IAAE+B,KAAtD,mCACA,4BCOGC,MAff,WACE,OACE,qBAAKpC,UAAU,MAAf,SAEI,eAAC,IAAD,WAEI,cAAC,EAAD,IAEA,cAAC,EAAD,UCAGqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCNRQ,EAAWC,YAAgB,IAOlBC,EAFDC,YAAYH,GCA1BI,IAASnB,OACL,cAAC,IAAMoB,WAAP,UACI,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRI,SAASC,eAAe,SAM5BhB,K,kBCnBAlD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,wB","file":"static/js/main.65dd1df5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__5QGl-\",\"errorInput\":\"Input_errorInput__1aQsI\",\"error\":\"Input_error__2mWog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__1TRS6\",\"spanClassName\":\"Checkbox_spanClassName__qt1T4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__1ACfP\",\"red\":\"Button_red__b3I_k\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction CheckIn() {\r\n    return (\r\n        <div>\r\n            CheckIn\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckIn;\r\n","import React from \"react\";\r\n\r\nfunction PasswordRecovery() {\r\n    return (\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './Input.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"./Input/Input\";\r\nimport s from './Header.module.css'\r\nimport SuperCheckbox from \"./checkbox/Checkbox\";\r\nimport SuperButton from \"./button/Button\";\r\n\r\n\r\n\r\nfunction Profile() {\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    return (\r\n        <div>\r\n            <SuperInputText\r\n                className={s.blue}\r\n            />\r\n            <div>\r\n                <SuperCheckbox   checked={checked}\r\n                                 onChangeChecked={setChecked}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nfunction EnteringNewPassword() {\r\n    return (\r\n        <div>\r\n            EnteringNewPassword\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnteringNewPassword;\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Error404 from \"./Error404\";\r\nimport Login from \"./Login\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport PasswordRecovery from \"./PasswordRecovery\";\r\nimport Profile from \"./Profile\";\r\nimport EnteringNewPassword from \"./EnteringNewPassword\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    CHECK_IN: '/check-in',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY:'/password-recovery',\r\n    ENTERING_NEW_PASSWORD:'/entering-new-password'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH. LOGIN}/>}/>\r\n\r\n                <Route path={PATH. LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH. CHECK_IN} render={() => <CheckIn/>}/>\r\n                <Route path={PATH. PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.  PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH. ENTERING_NEW_PASSWORD} render={() => <EnteringNewPassword/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes.\";\r\nimport s from './Header.module.css'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.LOGIN} className={s.link}>login</NavLink>\r\n            <NavLink to={PATH.CHECK_IN} className={s.link}>check-in</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={s.link}>profile</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY} className={s.link}>password-recovery</NavLink>\r\n            <NavLink to={PATH.ENTERING_NEW_PASSWORD} className={s.link}>entering-new-password</NavLink>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Routes from \"./components/Routes.\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        {/*в gh-pages лучше работает HashRouter*/}\n        <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst reducers = combineReducers({\r\n\r\n\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3qWpy\",\"header\":\"Header_header__k03gf\",\"blue\":\"Header_blue__4J3bg\"};"],"sourceRoot":""}